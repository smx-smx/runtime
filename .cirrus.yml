env:
  CIRRUS_CLONE_DEPTH: 1

linux_x64_task:
  container:
    image: debian:buster
    cpu: 8
    memory: 8G

  setup_script:
    - apt-get -qq update
    - apt-get install -y locales wget build-essential git libunwind-dev libicu-dev libssl-dev libcurl4-openssl-dev liblttng-ust-dev uuid-dev
    - echo "LC_ALL=en_US.UTF-8" >> /etc/environment
    - echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen
    - echo "LANG=en_US.UTF-8" > /etc/locale.conf
    - locale-gen en_US.UTF-8

  cmake_script:
    - wget -O cmake.sh https://cmake.org/files/v3.18/cmake-3.18.6-Linux-x86_64.sh
    - sh cmake.sh --skip-license --exclude-subdir --prefix=/usr/local

  toolchain_script:
    - git clone -b master --depth 1 https://github.com/smx-smx/arm-buildroot-linux-uclibcgnueabi.git

  build_script:
    - export PATH=$PWD/arm-buildroot-linux-uclibcgnueabi/bin:/usr/local/bin:$PATH
    - export LD_LIBRARY_PATH=$PWD/arm-buildroot-linux-uclibcgnueabi/lib:$LD_LIBRARY_PATH
    - TOOLCHAIN_DIR=$PWD/arm-buildroot-linux-uclibcgnueabi
      ROOTFS_DIR=${TOOLCHAIN_DIR}
      TOOLCHAIN_FILE=$PWD/bcm.cmake
      CLR_CC=`which arm-buildroot-linux-uclibcgnueabi-gcc`
      CLR_CXX=`which arm-buildroot-linux-uclibcgnueabi-g++`
      ./build.sh
          --arch armel
          -c release
          -v m
          -s Libs+Mono
          --cross $*

  runtime_artifacts:
    path: "artifacts/bin/runtime/net6.0-Linux-Release-armel/*"

  mono_library_artifacts:
    path: "artifacts/bin/mono/Linux.armel.Release/*"

  mono_binary_artifacts:
    path: "artifacts/obj/mono/Linux.armel.Release/out/bin/mono-sgen"


